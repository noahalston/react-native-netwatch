// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main test suite should render properly & Delete 1`] = `
<Fragment>
  <ForwardRef(withTheme(Appbar.Header))
    style={
      Array [
        Object {
          "elevation": 0,
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
        },
        Object {
          "backgroundColor": "#111827",
        },
      ]
    }
  >
    <ForwardRef
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
    >
      <Icon
        allowFontScaling={false}
        color="#FFF"
        name="x"
        onPress={[Function]}
        size={24}
      />
    </ForwardRef>
    <ForwardRef(withTheme(Appbar.Content))
      color="#06B6D4"
      title="Netwatch"
      titleStyle={
        Object {
          "fontSize": 18,
        }
      }
    />
    <ForwardRef
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
    >
      <Icon
        allowFontScaling={false}
        color="#FFF"
        name="download"
        onPress={[Function]}
        size={24}
      />
    </ForwardRef>
  </ForwardRef(withTheme(Appbar.Header))>
  <Component
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
        },
        Object {
          "backgroundColor": "#1F2937",
        },
      ]
    }
  >
    <ForwardRef(withTheme(undefined))
      iconColor="#6B7280"
      inputStyle={
        Object {
          "color": "#9CA3AF",
        }
      }
      onChangeText={[Function]}
      placeholder="Search"
      placeholderTextColor="#9CA3AF"
      style={
        Array [
          Object {
            "elevation": 0,
            "flex": 1,
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
          },
          Object {
            "backgroundColor": "#1F2937",
          },
        ]
      }
      value=""
    />
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "backgroundColor": "#1F2937",
            "borderLeftColor": "#111827",
          },
        ]
      }
      testID="showDetailsButton"
    >
      <Icon
        allowFontScaling={false}
        color="#D1D5DB"
        name="filter"
        size={24}
      />
    </ForwardRef>
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftColor": "#111827",
          },
        ]
      }
      testID="deleteListButton"
    >
      <Icon
        allowFontScaling={false}
        color="#D1D5DB"
        name="trash-2"
        size={24}
      />
    </ForwardRef>
  </Component>
  <FlatList
    data={Array []}
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    style={
      Object {
        "backgroundColor": "#1F2937",
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  />
</Fragment>
`;

exports[`Main test suite should render properly 1`] = `
<Fragment>
  <ForwardRef(withTheme(Appbar.Header))
    style={
      Array [
        Object {
          "elevation": 0,
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
        },
        Object {
          "backgroundColor": "#111827",
        },
      ]
    }
  >
    <ForwardRef
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
    >
      <Icon
        allowFontScaling={false}
        color="#FFF"
        name="x"
        onPress={[Function]}
        size={24}
      />
    </ForwardRef>
    <ForwardRef(withTheme(Appbar.Content))
      color="#06B6D4"
      title="Netwatch"
      titleStyle={
        Object {
          "fontSize": 18,
        }
      }
    />
    <ForwardRef
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
    >
      <Icon
        allowFontScaling={false}
        color="#FFF"
        name="download"
        onPress={[Function]}
        size={24}
      />
    </ForwardRef>
  </ForwardRef(withTheme(Appbar.Header))>
  <Component
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 56,
        },
        Object {
          "backgroundColor": "#1F2937",
        },
      ]
    }
  >
    <ForwardRef(withTheme(undefined))
      iconColor="#6B7280"
      inputStyle={
        Object {
          "color": "#9CA3AF",
        }
      }
      onChangeText={[Function]}
      placeholder="Search"
      placeholderTextColor="#9CA3AF"
      style={
        Array [
          Object {
            "elevation": 0,
            "flex": 1,
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
          },
          Object {
            "backgroundColor": "#1F2937",
          },
        ]
      }
      value=""
    />
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "backgroundColor": "#1F2937",
            "borderLeftColor": "#111827",
          },
        ]
      }
      testID="showDetailsButton"
    >
      <Icon
        allowFontScaling={false}
        color="#D1D5DB"
        name="filter"
        size={24}
      />
    </ForwardRef>
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftColor": "#111827",
          },
        ]
      }
      testID="deleteListButton"
    >
      <Icon
        allowFontScaling={false}
        color="#D1D5DB"
        name="trash-2"
        size={24}
      />
    </ForwardRef>
  </Component>
  <FlatList
    data={Array []}
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    style={
      Object {
        "backgroundColor": "#1F2937",
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  />
</Fragment>
`;
